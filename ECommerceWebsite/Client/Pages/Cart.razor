@page "/cart"
@inject ICartService CartService
<h3>Shopping Cart</h3>
@if (cartItemDTOs==null||cartItemDTOs.Count==0)
{
    <span>You have no items in your cart.</span>
}
else {
    <div>
        @foreach (var item in cartItemDTOs)
       {
           <div class="item-container">
               <div class="item-image-wrapper"><img src="@item.Image" class="item-image"/></div>
               <div class="item-name">
                   <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                   <span>@item.EditionName</span><br /> @*next line, a new line*@
                   <button class="btn-delete" @onclick="@(()=> DeleteItem(item))">Delete</button>
               </div>
               <div class="item-price">$@item.Price</div>
           </div>
       }
       <div class="item-price">
           Total (@cartItemDTOs.Count):$@cartItemDTOs.Sum(item=>item.Price)
       </div>
    </div>
}
@code {
    List<CartItemDTO> cartItemDTOs=new List<CartItemDTO>();
    protected override async Task OnInitializedAsync() {
        cartItemDTOs = await CartService.GetCartItems();
    }
    private async Task DeleteItem(CartItemDTO cartItemDTO) {
        await CartService.DeleteItem(cartItemDTO);
        cartItemDTOs = await CartService.GetCartItems();
    }
}
